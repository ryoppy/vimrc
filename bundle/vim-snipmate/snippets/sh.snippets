#sn_throw
snippet sn_throw
	Utils_ThrowException "${1}"
#sb_func
snippet sn_func
	##
	# ${2}
	# 
	# @method ${1:funcName}
	##
	function $1()
	{
		${3}
	}
#sb_check_file_exist
snippet sn_check_file_exist
	checkFilePath="${1}"
	Utils_CheckFileExist ${checkFilePath}
	if [ $? -eq 1 ]; then
	    Utils_Echo_Red "File not found. ${checkFilePath}"
	    exit 1
	fi
#sn_check
snippet sn_check_status
	Utils_CheckStatus $?
#sn_yes_no
snippet sn_yes_no
	echo "${1:Execute?}. [y/n]"
	Utils_YesNo
	if [ $? -eq 1 ]; then
		# yes
	else
		# no
	fi
#sn_input
snippet sn_input
	Utils_Input "{$1}"
	${2:value}=$result
#sn_color_red
snippet sn_color_red
	Utils_Echo_Red "${1}"
#sn_color_blue
snippet sn_color_blue
	Utils_Echo_Blue "${1}"
#sn_color_green
snippet sn_color_green
	Utils_Echo_Green "${1}"
#comm
snippet comm
	##
	# ${1}
	# 
	##
# #!/bin/bash
snippet #!
	#!/bin/bash	
snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
